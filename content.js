const colorScheme=["primaryColor","secondaryColor","tertiaryColor","backgroundColor","surfaceColor","surfaceColorHover","defaultWhite","textColor","arrowPrimary","arrowSecondary","arrowTertiary","arrowAlternate","lastMove","preMove","moveIndicator","boardDark","boardLight"],STREAMER_STYLES="\n@media (min-width: 800px),\n(orientation: landscape) {\n\n    main div.round__app {\n        grid-template-columns: minmax(calc(70vmin * var(--board-scale)), calc(100vh * var(--board-scale) - calc(var(--site-header-height) + var(--site-header-margin)) - 3rem)) minmax(240px, 400px);\n        grid-template-rows: 50px 1fr auto min-content 3fr auto min-content auto 1fr 50px !important;\n        grid-template-areas: 'user-top .''board voice''board mat-top''board expi-top''board moves''board controls''board expi-bot''board mat-bot''board .''user-bot .''kb-move .';\n    }\n\n    rm6 {\n        background: var(--surfaceColor);\n        border-top: 2px solid var(--surfaceColorHover);\n        border-bottom: 2px solid var(--surfaceColorHover);\n        border-radius: var(--borderRadius);\n    }\n\n    .round__app .rclock-top {\n        padding-bottom: 10px;\n        padding-top: 5px;\n        grid-area: user-top;\n    }\n\n    .round__app .rclock-bottom {\n        padding-top: 10px;\n        padding-bottom: 5px;\n        grid-area: user-bot;\n    }\n\n    .round__app .round__app__table {\n        grid-area: 4 / 2 / 6 / 3;\n    }\n    \n    .rclock {\n        display: inline;\n    }\n\n    .rclock > * {\n        float: right;\n        z-index: 5;\n        position: relative;\n    }\n\n    .rclock .tour-rank,\n    .rclock .moretime,\n    .rclock .berserked {\n        order: -1;\n    }\n\n    .rclock .bar {\n        display: none;\n    }\n\n    .rclock .time {\n        padding-left: 5px;\n        padding-right: 5px;\n        font-size: 2em;\n        line-height: 0px;\n        height: 100%;\n        width: 10ch;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-weight: 600;\n        font-family: 'Red Hat Display', sans-serif;\n    }\n\n    .rclock.running .time {\n        opacity: 1;\n        color: var(--defaultWhite) !important;\n    }\n\n    .rclock .time::before {\n        content: '';\n        top: 0;\n        left: 0;\n        position: absolute;\n        width: 98%;\n        height: 100%;\n        background: var(--defaultWhite);\n        opacity: .1;\n        border-radius: 4px;\n        z-index: -1;\n    }\n\n    .rclock.running .time::before {\n        background: var(--primaryColor) !important;\n        opacity: .5 !important;\n    }\n\n    .rclock.emerg.running .time::before {\n        background: var(--tertiaryColor);\n    }\n\n    .round__app .ruser {\n        font-size: 16px;\n        padding: 0em !important;\n        line-height: 14px;\n        background:none;\n        border: none !important;\n        border-radius: 0;\n        align-items: center;\n    }\n\n    .ruser-bottom {\n        margin-top: 5px;\n    }\n\n    .ruser-top {\n        margin-bottom: 5px;\n    }\n\n    .ruser a {\n        overflow: visible;\n        flex: none;\n    }\n\n    .rcontrols {\n        margin-top: 10px;\n        background: var(--surfaceColor);\n        border: 2px solid var(--surfaceColorHover);\n        border-radius: var(--borderRadius);\n    }\n\n    .ricons {\n        margin-top: 8px;\n    }\n\n    .round__underboard:empty {\n        display: none;\n    }\n}\n\n#top .site-buttons a[title=\"Moderation\"] {\n    display: none;\n}\n",LAYOUT_CHANGE="\nmain.lobby {\n\tgrid-template-areas:\n\t\t'app tv tv side'\n\t\t'table blog blog support'\n\t\t'leader puzzle puzzle winner'\n\t\t'feed puzzle puzzle .'\n\t\t'feed tours tours .'\n\t\t'. simuls simuls .'\n\t\t'. about about .';\n\tgrid-template-columns: minmax(400px, 1fr) 1fr 1fr minmax(400px, 1fr);\n\tgrid-template-rows: minmax(1fr, 800px) repeat(2, fit-content(0));\n}\n.lobby__app,\n.lobby__side {\n\theight: calc(100% - 40px) !important;\n}\n";function schemeSet(n){chrome.storage.sync.get(n,(function(e){if(console.log(n+" : "+e[n]),e[n]){let t=document.documentElement.getAttribute("style")||"",o=parseInt(e[n].substring(1,3),16),r=parseInt(e[n].substring(3,5),16),a=parseInt(e[n].substring(5,7),16),d=`--${n}: ${e[n]} !important;`,i=`--${n}RGB: ${o}, ${r}, ${a} !important;`;document.documentElement.setAttribute("style",`${t} ${d} ${i}`)}}))}function addVerticalLayoutButton(n){n=n.streamerMode,console.debug("Result: ",n),n&&(console.debug("enableStreamerMode"),enableStreamerMode()),console.debug("Creating button");var e=document.createElement("button");e.textContent=n?"Disable Vertical Layout":"Enable Vertical Layout",e.classList.add("button"),e.classList.add("streamerButton"),console.debug("Add click event"),e.addEventListener("click",(function(){n?(syncSet("streamerMode",!1),window.location.reload()):(syncSet("streamerMode",!0),window.location.reload())})),document.querySelector(".round").appendChild(e),console.debug("Added button")}function enableStreamerMode(){var n=document.createElement("style");n.type="text/css",n.innerText=STREAMER_STYLES,document.head.appendChild(n)}function syncSet(n,e){chrome.storage.sync.set({[n]:e})}colorScheme.forEach((n=>schemeSet(n))),console.debug("Scheme set"),chrome.storage.sync.get(null,(function(n){let e=n.defaultBoardSwitch?"var(--cg-coord-color-black)":"var(--boardDark)",t=n.defaultBoardSwitch?"var(--cg-coord-color-white)":"var(--boardLight)",o=document.documentElement.getAttribute("style")||"";document.documentElement.setAttribute("style",`${o} --coordDark: ${e} !important; --coordLight: ${t} !important;`)})),chrome.storage.sync.get("layoutPreference",(function(n){if("lichess"!==n.layoutPreference){let e=document.createElement("style");if(e.type="text/css",e.innerText=LAYOUT_CHANGE,"default-1440"===n.layoutPreference&&(e.innerText+="\nbody #main-wrap {--main-max-width: 2500px !important;}"),document.head)document.head.appendChild(e);else{const n=new MutationObserver((function(){document.head&&(n.disconnect(),document.head.appendChild(e))}));n.observe(document.documentElement,{childList:!0,subtree:!0})}}})),chrome.storage.sync.get("streamerMode",(function(n){const e=document.querySelector(".round");if(console.debug("Round: ",e),e)addVerticalLayoutButton(n);else{const e=new MutationObserver((function(){document.querySelector(".round")&&(console.debug("Found .round"),e.disconnect(),addVerticalLayoutButton(n))}));e.observe(document.documentElement,{childList:!0,subtree:!0}),console.debug("Connected MutationObserver")}})),window.addEventListener("message",(function(n){n.source===window&&"cypress"===n.data.type&&"sync.clear"===n.data.command&&chrome.storage.sync.clear()}));